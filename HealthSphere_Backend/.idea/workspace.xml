<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="eacf05bb-8e8b-477e-b8cd-c4eba4b7033d" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/../client/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/../client/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../client/src/index.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../client/src/main.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/../client/src/main.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../client/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/../client/yarn.lock" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Enum" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="jar://$MAVEN_REPOSITORY$/org/springframework/security/spring-security-web/6.3.1/spring-security-web-6.3.1-sources.jar!/org/springframework/security/web/csrf/CookieCsrfTokenRepository.java" root0="SKIP_INSPECTION" />
    <setting file="jar://$MAVEN_REPOSITORY$/org/springframework/security/spring-security-web/6.3.1/spring-security-web-6.3.1-sources.jar!/org/springframework/security/web/csrf/CsrfTokenRepository.java" root0="SKIP_INSPECTION" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="mavenHomeTypeForPersistence" value="WRAPPER" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2kpjvSG6lA5higndsnE5WIjVVhc" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Application.HealthSphereBackendApplication.executor&quot;: &quot;Run&quot;,
    &quot;Docker.compose.yaml.elasticsearch: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.compose.yaml.postgres: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.compose.yaml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatCreateAppointmentForDoctorReturnsHttp201CreatedAndCorrespondingData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatCreateAppointmentForPatientOrDoctorReturnsHttp400BadRequestIfInvalidData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatCreateAppointmentForPatientReturnsHttp201CreatedAndCorrespondingData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatCreateAppointmentForPatientReturnsHttp400BadRequestIfInvalidData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatCreatingTheAppointmentToTheSameDoctorAtTheSameTimeThrowsException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatDeleteAppointmentByIdReturnsHttp202Accepted.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatGetAllAppointmentsForDoctorReturnsHttp200Ok.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatGetAllAppointmentsForDoctorReturnsHttp403ForbiddenIfWrongRole.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatGetAllAppointmentsForPatientReturnsHttp200Ok.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatGetAllAppointmentsForPatientReturnsHttp403ForbiddenIfUnauthorized.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatGetAppointmentByIdReturnsHttp404NotFoundIfSuchAppointmentWasNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatPatchAppointmentAsDoctorReturnsHttp201CreatedAndCorrespondingDataIfChangedDate.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatPatchAppointmentAsPatientReturnsHttp201CreatedAndCorrespondingDataIfChangedDate.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatPatchAppointmentAsPatientReturnsHttp201CreatedIfChangedDate.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatPatchAppointmentReturnsHttp200OkAndCorrespondingData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatPatchAppointmentReturnsHttp200OkAndCorrespondingDataIfChangedReasonOrStatus.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatPatchAppointmentReturnsHttp204AcceptedIfStatusIsCanceled.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatPatchAppointmentReturnsHttp400BadRequestIfDataIsInvalid.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentControllerIntegrationTest.testThatPatchAppointmentReturnsHttp404NotFoundIfAppointmentWasNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentMapperUnitTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentRepositoryDataJpaTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentRepositoryDataJpaTest.testThatFindByDoctorIdReturnsPageOfAppointments.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentRepositoryDataJpaTest.testThatFindByPatientIdReturnsPageOfAppointments.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentServiceUnitTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentServiceUnitTest.testThatCreateAppointmentForDoctorThrowsException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentServiceUnitTest.testThatCreateAppointmentForDoctorWorks.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentServiceUnitTest.testThatCreateAppointmentForPatientThrowsException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentServiceUnitTest.testThatCreateAppointmentForPatientWorks.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentServiceUnitTest.testThatDeleteAppointmentByIdWorks.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentServiceUnitTest.testThatGetAllAppointmentsForUserReturnsPageOfAppointments.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentServiceUnitTest.testThatGetAppointmentByIdThrowsException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentServiceUnitTest.testThatGetAppointmentReturnsAppointment.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentServiceUnitTest.testThatPatchAppointmentThrowsException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.AppointmentServiceUnitTest.testThatPatchAppointmentWorks.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.CsrfControllerIntegrationTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.CsrfControllerIntegrationTest.testThatCsrfGeneratorWorksWell.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.testThatDeleteDoctorByEmailReturnHttp203Accepted.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.testThatDeleteDoctorByEmailReturnsHttp403ForbiddenIfCalledUnauthorizedOrWrongRole.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.testThatDeleteDoctorByEmailReturnsHttp403ForbiddenIfUnauthorizedOrWrongRole.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.testThatDeleteDoctorByEmailReturnsHttp404NotFoundIfDoctorWasNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.testThatDeleteDoctorByIdReturnHttp203Accepted.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.testThatDeleteDoctorByIdReturnsHttp403ForbiddenIfCalledUnauthorizedOrWrongRole.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.testThatGetAllDoctorsByParamsReturnsHttp200OkAndData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.testThatGetAllDoctorsReturnsHttp200OkAndCorrespondingData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.testThatGetAllDoctorsReturnsHttp403ForbiddenIfCalledUnauthorized.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.testThatGetDoctorByEmailReturnsHttp200OkAndCorrespondingData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.testThatGetDoctorByEmailReturnsHttp403ForbiddenIfCalledUnauthorized.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.testThatGetDoctorByEmailReturnsHttp403ForbiddenIfCalledUnauthorizedOrWrongRole.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.testThatGetDoctorByIdReturnsHttp200OkIfDoctorWasFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.testThatGetDoctorByIdReturnsHttp403ForbiddenIfCalledUnauthorized.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.testThatGetDoctorByIdReturnsHttp404IfDoctorWasNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.testThatPatchDoctorByEmailReturnsHttp200OkAndCorrespondingData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.testThatPatchDoctorByEmailReturnsHttp403ForbiddenIfCalledUnauthorizedOrWrongRole.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorControllerIntegrationTest.testThatPatchDoctorByEmailReturnsHttp403ForbiddenIfUnauthorizedOrWrongRole.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorDetailMapperUnitTest.testThatDoctorDetailMapperMapsToDto.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorDocumentMapperUnitTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorDocumentMapperUnitTest.testThatDoctorDetailMapperMapsToDto.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorElasticRepositoryIntegrationTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorElasticRepositoryIntegrationTest.testThatFindByFirstAndLastNameWorksWell.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorElasticRepositoryIntegrationTest.testThatFindByFirstAndLastnamesReturnsPageOfResults.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorElasticRepositoryIntegrationTest.testThatFindBySpecializationReturnsPageOfResults.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorListMapperUnitTest.testThatMapperConvertsEntityToDto.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorMessageProducerUnitTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorMessageProducerUnitTest.testThatDeleteDoctorFromIndexAcceptsCorrectData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorMessageProducerUnitTest.testThatSendDoctorToIndexAcceptsCorrectData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorMessageProducterIntegrationTest.testThatSendDoctorToIndexWorksWell.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorRepositoryDataJpaTest.testThatFindDoctorByEmailReturnsOptionalOfEmpty.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorRepositoryDataJpaTest.testThatFindDoctorByEmailWorksWellIfDoctorExists.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorServiceUnitTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorServiceUnitTest.testThatDeleteDoctorByEmailThrowsException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorServiceUnitTest.testThatDeleteDoctorByEmailWorks.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorServiceUnitTest.testThatGetAllDoctorsReturnPage.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorServiceUnitTest.testThatGetDoctorByEmailReturnsDoctor.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorServiceUnitTest.testThatGetDoctorByEmailThrowsException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorServiceUnitTest.testThatGetDoctorByIdReturnsDoctor.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorServiceUnitTest.testThatGetDoctorByIdThrowsNotFoundException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorServiceUnitTest.testThatGetDoctorsByParamReturnsDoctorDocument.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorServiceUnitTest.testThatPatchDoctorByEmailThrowsException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorServiceUnitTest.testThatPatchDoctorByEmailWorks.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.DoctorServiceUnitTest.testThatPatchDoctorByIdWorks.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.HealthSphereBackendApplicationTests.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.HealthSphere_Backend in HealthSphere_Backend.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.JwtAuthFilterUnitTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.JwtAuthFilterUnitTest.testThatFilterAuthenticatesWhenEverythingIsCorrect.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.JwtAuthFilterUnitTest.testThatFilterDoesNotExecuteWhenThereAreNoCookies.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.JwtAuthFilterUnitTest.testThatFilterDoesNotExecutesIfAuthorizationHeaderIsWrong.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.JwtAuthFilterUnitTest.testThatFilterDoesNotExecutesWhenThereIsNoAuthorizationHeader.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.JwtAuthFilterUnitTest.testThatFilterDoesNotExecutesWhenThereIsNoCorrectCookie.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.JwtAuthFilterUnitTest.testThatFilterDoesNotExecutesWhenTokenIsInvalid.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.JwtServiceUnitTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.JwtServiceUnitTest.testThatExtractUsernameWorksAsIntended.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.JwtServiceUnitTest.testThatGenerateJwtWorksAsIntended.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.JwtServiceUnitTest.testThatIsTokenValidReturnsFalseIfUsernameIsIncorrect.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.JwtServiceUnitTest.testThatIsTokenValidReturnsTrueIfUsernameIsCorrect.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordControllerIntegrationTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordControllerIntegrationTest.testThatCreateNewMedicalRecordReturnsHttp201CreatedIfEverythingIsGood.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordControllerIntegrationTest.testThatCreateNewMedicalRecordReturnsHttp400BadRequestIfDataIsInvalid.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordControllerIntegrationTest.testThatCreateNewMedicalRecordReturnsHttp403ForbiddenIfUserIsUnauthorizedOrHasAWrongRole.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordControllerIntegrationTest.testThatDeleteMedicalRecordByIdReturnsHttp403ForbiddenIfUserIsUnauthorizedOrHasWrongRole.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordControllerIntegrationTest.testThatDeleteMedicalRecordReturnsHttp202AcceptedIfEverythingIsOk.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordControllerIntegrationTest.testThatGetAllMedicalRecordsReturnsHttp200OkAndCorrespondingData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordControllerIntegrationTest.testThatGetAllMedicalRecordsReturnsHttp403IfAuthorizationHeaderNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordControllerIntegrationTest.testThatGetMedicalRecordsByParamsReturnsHttp200AndCorrespondingData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordControllerIntegrationTest.testThatGetMedicalRecordsReturnsHttp200OkIfEverythingGood.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordControllerIntegrationTest.testThatGetMedicalRecordsReturnsHttp403IfUnauthorized.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordControllerIntegrationTest.testThatGetMedicalRecordsReturnsHttp404IfCorrespondingRecordsDoesNotExist.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordControllerIntegrationTest.testThatPatchDetailedMedicalRecordReturnsHttp200OkAndCorrespondingDataIfEverythingIsOk.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordControllerIntegrationTest.testThatPatchDetailedMedicalRecordReturnsHttp400BadRequestIfDataIsInvalid.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordControllerIntegrationTest.testThatPatchDetailedMedicalRecordReturnsHttp403ForbiddenIfUserIsUnauthorizedOrWrongRole.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordControllerIntegrationTest.testThatPatchDetailedMedicalRecordReturnsHttp404NotFoundIfSuchMedicalRecordDoesNotExist.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordDetailMapperUnitTest.testThatMapperMapsToDto.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordDocumentMapperUnitTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordDocumentMapperUnitTest.testThatMedicalRecordMapperMapsToDto.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordElasticRepositoryIntegrationTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordElasticRepositoryIntegrationTest.testThatFindByParamsReturnsPageOfResultsWhenAllOfParamsArePresent.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordElasticRepositoryIntegrationTest.testThatFindByParamsReturnsPageOfResultsWhenDateIsNotSent.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordElasticRepositoryIntegrationTest.testThatFindByParamsReturnsPageOfResultsWhenNotAllParamsArePresent.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordElasticRepositoryIntegrationTest.testThatFindByParamsReturnsPageOfWithoutResultsWhenSentWrongParams.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordListMapperUnitTest.testThatMapperMapsToDto.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordMessageProducerUnitTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordMessageProducerUnitTest.testThatSendMedicalRecordCreateUpdatePerformsAsExpected.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordMessageProducerUnitTest.testThatSendMedicalRecordDeletePerformsAsExpected.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordRepositoryDataJpaTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordRepositoryDataJpaTest.testThatMedicalRecordRepositoryFindsRecordsByPatientEmail.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordRepositoryDataJpaTest.testThatMedicalRecordRepositoryFindsRecordsByPatientId.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordRepositoryDataJpaTest.testThatMedicalRecordRepositoryReturnsEmptyListOfRecords.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordServiceUnitTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordServiceUnitTest.testThatCreateMedicalRecordPerformsAsExpected.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordServiceUnitTest.testThatDeleteMedicalRecordByIdPerformsAsExpected.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordServiceUnitTest.testThatGetMedicalRecordForPatientByIdReturnsMedicalRecord.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordServiceUnitTest.testThatGetMedicalRecordForPatientByIdThrowsNotFoundError.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordServiceUnitTest.testThatMedicalRecordServiceReturnsListOfRecords.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordServiceUnitTest.testThatMedicalRecordServiceReturnsWithParamsListOfRecords.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordServiceUnitTest.testThatPatchMedicalForPatient.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordServiceUnitTest.testThatPatchMedicalForPatientThrowsNotFoundException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.MedicalRecordServiceUnitTest.testThatPatchMedicalForPatientUpdatesTheRecord.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientControllerIntegrationTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientControllerIntegrationTest.testThatDeleteByEmailReturnsHttp202Accepted.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientControllerIntegrationTest.testThatDeleteByEmailReturnsHttp403IfNotAuthorized.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientControllerIntegrationTest.testThatGetDetailedPatientInfoReturnsHttp200OkAndCorrespondingInfo.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientControllerIntegrationTest.testThatGetDetailedPatientInfoReturnsHttp403IfCalledWithoutAccessToken.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientControllerIntegrationTest.testThatGetDetailedPatientInfoReturnsHttp404NotFoundIfUserWithSuchIdWasNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientControllerIntegrationTest.testThatGetPatientReturnsHttp200OkAndCorrespondingDataIfCalledCorrectly.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientControllerIntegrationTest.testThatGetPatientReturnsHttp401UnauthorizedIfCalledWithoutCookie.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientControllerIntegrationTest.testThatGetPatientReturnsHttp403ForbiddenIfSentWithoutAccessToken.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientControllerIntegrationTest.testThatGetPatientReturnsHttp403UnauthorizedIfCalledWithoutAccessCookie.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientControllerIntegrationTest.testThatGetPatientReturnsHttp403UnauthorizedIfCalledWithoutCookie.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientControllerIntegrationTest.testThatPatchPatientReturnsHttp200OkIfEverythingIsOk.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientControllerIntegrationTest.testThatPatchPatientReturnsHttp400BadRequestIfDateOfBirthIsWrong.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientControllerIntegrationTest.testThatPatchPatientReturnsHttp401UnauthorizedIfCalledWithoutAccessCookie.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientControllerIntegrationTest.testThatPatchPatientReturnsHttp403ForbiddenIfCalledWithoutAccessToken.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientControllerIntegrationTest.testThatPatchPatientReturnsHttp403UnauthorizedIfCalledWithoutAccessCookie.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientMapperUnitTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientMapperUnitTest.testThatToEntityWorksWell.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientRepositoryDataJpaTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientRepositoryDataJpaTest.testThatPatientWillBeDeleted.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientRepositoryDataJpaTest.testThatPatientWillBeFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientRepositoryDataJpaTest.testThatPatientWillNotBeFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientServiceUnitTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientServiceUnitTest.testThatDeletePatientThrowsErrorIfEmailIsIncorrect.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientServiceUnitTest.testThatDeletePatientWorksWell.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientServiceUnitTest.testThatGetPatientByIdThrowsException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientServiceUnitTest.testThatGetPatientReturnsCorrectUser.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientServiceUnitTest.testThatGetPatientThrowsNotFoundErrorIFNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientServiceUnitTest.testThatPatchPatientReturnsNotFoundException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PatientServiceUnitTest.testThatPatchPatientWorksWell.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionControllerIntegrationTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionControllerIntegrationTest.testThatAddMedicineToPrescriptionReturnsHttp201CreatedAndCorrespondingData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionControllerIntegrationTest.testThatAddMedicineToPrescriptionReturnsHttp404NotFoundWhenPrescriptionDoesNotExist.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionControllerIntegrationTest.testThatCreateNewPrescriptionReturnsHttp200OkAndCorrespondingData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionControllerIntegrationTest.testThatCreateNewPrescriptionReturnsHttp201CreatedAndCorrespondingData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionControllerIntegrationTest.testThatCreateNewPrescriptionReturnsHttp400BadRequestIfDataIsInvalid.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionControllerIntegrationTest.testThatCreateNewPrescriptionReturnsHttp403ForbiddenIfUnauthorized.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionControllerIntegrationTest.testThatGetAllMedicineToPrescriptionReturnsHttp200OkAndCorrespondingData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionControllerIntegrationTest.testThatGetAllMedicineToPrescriptionReturnsHttp403ForbiddenIfUnauthorized.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionControllerIntegrationTest.testThatUpdateMedicineInstructionsByIdReturnsHttp403ForbiddenIfUnauthorized.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionControllerIntegrationTest.testThatUpdateMedicineInstructionsReturnsHttp200OkAndCorrespondingData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionMapperUnitTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionMapperUnitTest.testThatPrescriptionMapperMapsToEntity.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionMedicineMapperUnitTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionRepositoryDataJpaTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionRepositoryDataJpaTest.testThatFindByPrescriptionIdReturnsListOfMedicine.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionServiceUnitTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionServiceUnitTest.testThatAddMedicineToPrescriptionReturnsAddedMedicine.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionServiceUnitTest.testThatAddMedicineToPrescriptionThrowsException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionServiceUnitTest.testThatCreatePrescriptionThrowsException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionServiceUnitTest.testThatCreatePrescriptionWorks.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionServiceUnitTest.testThatDeleteWholePrescriptionWorks.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionServiceUnitTest.testThatGetAllMedicineByPrescriptionIdReturnsList.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionServiceUnitTest.testThatRemoveMedicineFromPrescriptionByIdWorks.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionServiceUnitTest.testThatUpdateMedicineByIdReturnsUpdatedMedicine.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PrescriptionServiceUnitTest.testThatUpdateMedicineByIdThrowsException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RabbitMessageConsumerIntegrationTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RabbitMessageConsumerIntegrationTest.testThatConsumeDoctorAddPerformsAddToElasticSearchDb.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RabbitMessageConsumerIntegrationTest.testThatConsumeDoctorDeletePerformsDeleteFromElasticSearchDb.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RabbitMessageConsumerIntegrationTest.testThatConsumeDoctorDeleteReceivesMessageFromRabbitmq.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RabbitMessageConsumerIntegrationTest.testThatConsumeMedicalRecordCreateUpdatePerformsAddToElasticSearchDb.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RabbitMessageConsumerIntegrationTest.testThatConsumeMedicalRecordDeletePerformsDeleteFromElasticSearchDb.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RabbitMessageConsumerUnitTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RabbitMessageConsumerUnitTest.testThatConsumeDoctorDeleteGetsCorrectArgs.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RabbitMessageConsumerUnitTest.testThatConsumeDoctorForIndexingGetsCorrectArgs.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RabbitMessageConsumerUnitTest.testThatConsumeDoctorForIndexingPerformsCorrectly.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RabbitMessageConsumerUnitTest.testThatConsumeMedicalRecordCreateUpdateGetsCorrectArgs.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.RabbitMessageConsumerUnitTest.testThatConsumeMedicalRecordDeleteGetsCorrectArgs.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.SpecializationMapperUnitTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.SpecializationMapperUnitTest.testThatSpecializationMapperMapsToDto.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.SpecializationMapperUnitTest.testThatSpecializationMapperMapsToEntity.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.testThatDoctorRegisterReturnsHttp201CreatedAndCorrespondingDataIfEverythingOk.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.testThatDoctorRegisterReturnsHttp400BadRequestIfInvalidData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.testThatDoctorRegisterReturnsHttp403ForbiddenIfSentWithoutCsrf.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.testThatDoctorRegisterReturnsHttp403ForbiddenIfUserHasWrongRole.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.testThatDoctorRegisterReturnsHttp403IfSentWithoutCsrf.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.testThatGetJwtReturnHttp200OkAndAccessToken.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.testThatGetJwtReturnsHttp401UnauthorizedIfAccessTokenWasNotFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.testThatLoginUserReturnsHttp200OkWithJwtTokenAndCookieIfCorrectCredentials.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.testThatLoginUserReturnsHttp400BadRequestIfValidationFails.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.testThatLoginUserReturnsHttp403ForbiddenIfPasswordIsIncorrect.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.testThatLogoutUserReturnsHttp200OkIfUserIsLoggedId.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.testThatLogoutUserReturnsHttp200OkIfUserIsLoggedIn.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.testThatLogoutUserReturnsHttp200OkIfUserIsNotLoggedIn.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.testThatLogoutUserReturnsHttp202AcceptedIfUserIsLoggedId.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.testThatLogoutUserReturnsHttp403ForbiddenIfUserIsNotLoggedIn.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.testThatUserRegisterReturnsHttp201CreatedAndCorrectData.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.testThatUserRegisterReturnsHttp400BadRequestIfValidationFails.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerIntegrationTest.testThatUserRegisterReturnsHttp403ForbiddenIfSentWithoutCSRF.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerRabbitmqIntegrationTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserControllerRabbitmqIntegrationTest.testThatDoctorRegisterReturnsHttp201CreatedAndCorrespondingDataIfEverythingOk.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserRepositoryDataJpaTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserRepositoryDataJpaTest.testThatExistentUserWillBeFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserRepositoryDataJpaTest.testThatNonExistentUserWillNotBeFound.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceImplUnitTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceImplUnitTest.testThatDoctorRegisterWorksWell.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceImplUnitTest.testThatGetUserByUsernameReturnsUser.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceImplUnitTest.testThatGetUserByUsernameThrowsNotFoundException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceImplUnitTest.testThatPatientRegisterWorksWell.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.UserServiceImplUnitTest.testThatUserRegisterWorksWell.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.com._olelllka.HealthSphere_Backend in HealthSphere_Backend.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.configuration in HealthSphere_Backend.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.controllers in HealthSphere_Backend.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.java in HealthSphere_Backend.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.mapper in HealthSphere_Backend.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.repositories in HealthSphere_Backend.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.service in HealthSphere_Backend.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/sichk/Documents/Programming/Projects/HealthSphere/HealthSphere_Backend/src/test/resources&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Problems&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.keymap&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/test/resources" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/src/main/resources" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.java in HealthSphere_Backend">
    <configuration name="HealthSphere_Backend in HealthSphere_Backend" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="HealthSphere_Backend" />
      <option name="TEST_OBJECT" value="directory" />
      <dir value="$PROJECT_DIR$/src/test/java/com/_olelllka/HealthSphere_Backend" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MedicalRecordRepositoryDataJpaTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="HealthSphere_Backend" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com._olelllka.HealthSphere_Backend.repositories.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com._olelllka.HealthSphere_Backend.repositories" />
      <option name="MAIN_CLASS_NAME" value="com._olelllka.HealthSphere_Backend.repositories.MedicalRecordRepositoryDataJpaTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="controllers in HealthSphere_Backend" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="HealthSphere_Backend" />
      <option name="TEST_OBJECT" value="directory" />
      <dir value="$PROJECT_DIR$/src/test/java/com/_olelllka/HealthSphere_Backend/controllers" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="java in HealthSphere_Backend" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="HealthSphere_Backend" />
      <option name="TEST_OBJECT" value="directory" />
      <dir value="$PROJECT_DIR$/src/test/java" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="repositories in HealthSphere_Backend" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="HealthSphere_Backend" />
      <option name="TEST_OBJECT" value="directory" />
      <dir value="$PROJECT_DIR$/src/test/java/com/_olelllka/HealthSphere_Backend/repositories" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.java in HealthSphere_Backend" />
        <item itemvalue="JUnit.HealthSphere_Backend in HealthSphere_Backend" />
        <item itemvalue="JUnit.MedicalRecordRepositoryDataJpaTest" />
        <item itemvalue="JUnit.repositories in HealthSphere_Backend" />
        <item itemvalue="JUnit.controllers in HealthSphere_Backend" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="eacf05bb-8e8b-477e-b8cd-c4eba4b7033d" name="Changes" comment="" />
      <created>1723987643054</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1723987643054</updated>
    </task>
    <servers />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName=".env" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint type="java-method">
          <url>file://$PROJECT_DIR$/src/main/java/com/_olelllka/HealthSphere_Backend/repositories/UserRepository.java</url>
          <line>11</line>
          <properties class="com._olelllka.HealthSphere_Backend.repositories.UserRepository" method="findByEmail">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="24" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/HealthSphere_Backend$UserControllerIntegrationTest.ic" NAME="UserControllerIntegrationTest Coverage Results" MODIFIED="1725195150507" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
      <FILTER>com._olelllka.HealthSphere_Backend.controllers.*</FILTER>
    </SUITE>
  </component>
</project>